services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecurepassword123
      POSTGRES_DB: triosigno

    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d triosigno"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@trio.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mynetwork

  server:
    build: trio-signo-server/.
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URLpostgresql://postgres:supersecurepassword123@db:5432/triosigno?schema=public
      - VIRTUAL_HOST=api.${DOMAIN}
      - LETSENCRYPT_HOST=api.${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL}
    networks:
      - mynetwork
    entrypoint: ["/bin/sh", "-c", 'echo $DATABASE_URL && npx prisma migrate deploy && npm run start:dev']

  ai-service:
    build: trio-signo-ai/.
    ports:
      - "5000:5000"
    depends_on:
      - server
    networks:
      - mynetwork

  front-service:
    build: trio-signo-front/.
    ports:
      - "4000:4000"
    environment:
      - VIRTUAL_HOST=${DOMAIN}
      - LETSENCRYPT_HOST=${DOMAIN}
      - LETSENCRYPT_EMAIL=${EMAIL}
    depends_on:
      - server
    networks:
      - mynetwork
  
  nginx-proxy:
    image: nginxproxy/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./data/certs:/etc/nginx/certs:ro
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
    networks:
      - mynetwork

  letsencrypt:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-le
    restart: always
    environment:
      - DEFAULT_EMAIL=${EMAIL}
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/certs:/etc/nginx/certs:rw
      - ./data/vhost.d:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
    networks:
      - mynetwork

networks:
  mynetwork:
    external: false

volumes:
  pgdata:
  pgadmin_data:
