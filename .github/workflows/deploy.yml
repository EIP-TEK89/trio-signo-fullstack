name: Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Deploy over SSH
        run: |
          ssh -o StrictHostKeyChecking=no \
              -o ServerAliveInterval=60 \
              -o ServerAliveCountMax=10 \
              ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e  # Arrêter en cas d'erreur
            
            echo "--- [START DEPLOY] $(date) ---"
            
            # Vérifier que Docker est en cours d'exécution
            if ! docker info > /dev/null 2>&1; then
              echo "Erreur : Docker n'est pas en cours d'exécution ou nécessite des privilèges sudo"
              exit 1
            fi

            # Clone si le projet n'existe pas
            DEPLOY_DIR="/home/${{ secrets.VPS_USER }}/trio-signo-fullstack"
            if [ ! -d "$DEPLOY_DIR" ]; then
              echo "Clonage du dépôt..."
              git clone --recursive https://github.com/EIP-TEK89/trio-signo-fullstack.git $DEPLOY_DIR
            fi

            cd $DEPLOY_DIR

            # Pull du repo + submodules
            echo "Mise à jour du dépôt et des sous-modules..."
            git fetch --all
            git reset --hard origin/main
            git submodule sync
            git submodule update --init --recursive
            git submodule foreach git pull origin main

            # Vérifier si les certificats SSL existent déjà
            echo "Vérification et initialisation des certificats SSL si nécessaire..."
            # Créer les répertoires nécessaires s'ils n'existent pas
            mkdir -p nginx/conf.d nginx/ssl nginx/www
            
            # Exécuter l'initialisation des certificats SSL (le script mis à jour gère désormais les certificats existants)
            chmod +x init_ssl.sh
            ./init_ssl.sh

            # Build & run Docker
            docker compose down
            docker compose pull
            docker compose up -d --build
            
            # Vérifier l'état des services
            echo "Vérification de l'état des services..."
            docker compose ps
            
            # Renouveler les certificats SSL si nécessaire
            docker compose run --rm certbot renew --quiet
            
            echo "--- [END DEPLOY] ---"
          EOF
